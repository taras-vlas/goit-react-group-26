{"version":3,"sources":["components/MySecondComponent.jsx","components/MyFirstComponent.jsx","components/MyThirdComponent.jsx","App.js","index.js"],"names":["MySecondComponent","className","this","props","user","name","Component","MyFirstComponent","x","defaultProps","MyThirdComponent","children","App","link","React","createElement","href","target","rel","console","log","ReactDOM","render","document","getElementById"],"mappings":"+MAmBeA,E,4JAbX,WACI,OACI,sBAAKC,UAAU,mBAAf,UACI,mDACA,wDAEA,4CAAeC,KAAKC,MAAMC,KAAKC,e,GARfC,aCQ1BC,EAAmB,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMI,EAAT,EAASA,EAAT,OAEjB,cAFoC,CAEnC,WAAD,WAEE,sBAAKP,UAAU,iBAAf,UACI,gDACA,gPAEF,4CAAgBG,EAAKC,QAIrB,oCAAOG,QAEP,8BACI,wCAIN,cAAC,EAAD,CAAmBJ,KAAMA,QAKnCG,EAAiBE,aAAe,CAC5BD,EAAG,GAOQD,QCjCAG,EAVU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACI,sBAAKV,UAAU,kBAAf,UACI,iDAECU,MCgCEC,EA/BH,WAOV,OAIE,cAHA,CAGA,OAAKX,UAAU,MAAf,UACE,kDAIA,cAAC,EAAD,CAAkBG,KAbP,CACXC,KAAM,SAYwBG,EAAG,KAEjC,6CAGA,cAAC,EAAD,UACE,qCACA,6FACA,sDC1BFK,EAAOC,IAAMC,cAAc,IAC/B,CACEC,KAAM,uBACNC,OAAQ,SACRC,IAAK,uBAEP,iEAGFC,QAAQC,IAAI,SAAUP,GAEtBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec93192a.chunk.js","sourcesContent":["// import React from 'react';\r\nimport { Component } from 'react'; //деструктуризували React\r\n\r\n// class MySecondComponent extends React.Component {  //деструктуризували React\r\nclass MySecondComponent extends Component {\r\n    //повинен реалізувати ф-цію render а вона повернути теги\r\n    render() {\r\n        return (\r\n            <div className=\"second-component\">\r\n                <h4>second  component</h4>\r\n                <p>jklfg djkuyt klihcxx ss</p>\r\n                {/* <p>user name: Roha</p> */}\r\n                <p>user name: {this.props.user.name}</p>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default MySecondComponent;","// import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MySecondComponent from './MySecondComponent';\r\n\r\n// react повертає тільки 1 компонент-parent, тому\r\n// є варіант:  <></>\r\n// є варіант:  <Fragment></Fragment>\r\n//створюємо компоненту\r\n// const MyFirstComponent = () => {\r\n//const MyFirstComponent = () => (\r\n// const MyFirstComponent = (props) => (  //вказуємо що прийдуть props\r\nconst MyFirstComponent = ({ user, x }) => ( //дeструктуризували  props\r\n// const MyFirstComponent = ({ user, x = 0 }) => ( //дeструктуризували  props    \r\n        <Fragment>\r\n            {/* return ( */}\r\n          <div className=\"test-component\">\r\n              <h2>Test Component</h2>\r\n              <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Facilis, maxime. Velit, voluptatibus repudiandae. Quos vel ullam ratione quod a excepturi sapiente debitis alias, minus officia in! Ut ex ducimus et.</p>\r\n            {/* <p>user name: {props.user.name}</p> //дeструктуризували  props*/}\r\n            <p>user name: { user.name }</p>  \r\n            {/* а якщо не передано параметр x тоді за defaultProps: хочу щоб він був \"0\"\r\n            тоді 2 шляхи: 1-й -якщо функціональн. компонент, то всередину пишемо ({user, x = 0}),\r\n            2-й  */}\r\n            <p>x: {x}</p>\r\n           </div>\r\n            <div>\r\n                <p>hello</p>\r\n            </div>\r\n        {/* ); */}\r\n          {/* <MySecondComponent user={props.user} /> //дeструктуризували  props*/}\r\n          <MySecondComponent user={user} />\r\n        </Fragment>\r\n// };\r\n);\r\n\r\nMyFirstComponent.defaultProps = {\r\n    x: 0,\r\n};\r\nMyFirstComponent.propTypes = {\r\n    x: PropTypes.number,\r\n};\r\n\r\n\r\nexport default MyFirstComponent;","//const MyThirdComponent = (props) => {\r\nconst MyThirdComponent = ({ children }) => { //дeструктуризували props\r\n    return (\r\n        <div className=\"third-component\">\r\n            <h4>third component</h4>\r\n            \r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyThirdComponent;","import MyFirstComponent from './components/MyFirstComponent';\n// import MySecondComponent from './components/MySecondComponent';\nimport MyThirdComponent from './components/MyThirdComponent';\n\n// Елементи, => Компоненти (файли-класи, файли-ф-ції)\n// Компоненту пишуть з Великої літери\n// function App() {\nconst App = () => {\n\n  /* props ***є  const user  її треба передати у MyFirstComponent... */\n    const user = {\n      name: 'Bobby',\n    };\n\n  return (\n    // ф-я повертає jsx <теги>, \n    // а Babel перетворює їх в createElement < div >, <h1>\n    // <div class=\"App\">\n    <div className=\"App\">\n      <h1>Hello from react</h1>\n{/* Тут Рендерю Компонент і звідси передаю властивості/Props/чи настройки компонента */}\n      {/* <MyFirstComponent /> */}\n      {/* <MyFirstComponent user={user} /> */} \n      <MyFirstComponent user={user} x={73} />\n      {/* <MyFirstComponent user={user} x = \"Hi!\" /> */}\n      <p>lorem ipsum </p>\n      {/* <MySecondComponent /> */}\n      {/* <MySecondComponent user={user} /> */}\n      <MyThirdComponent>\n        <>\n        <p>lorem, , ipsum dolor sit amet consectetur adipisicing elit. </p>\n        <button>Push me</button>\n        </>\n      </MyThirdComponent>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nconst link = React.createElement('a',\n  {\n    href: 'https://reactjs.org/',\n    target: '_blank',\n    rel: 'noreferrer noopener',\n  },\n  'Ссылка на reactjs.org',\n);\n\nconsole.log('link: ', link);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}